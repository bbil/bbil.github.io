{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["BlogPostTemplate","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","location","window","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"gNA6FeA,UAzE0C,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAExDC,EAAOF,EAAKG,eACZC,EAAYJ,EAAKK,KAAKC,aAAaC,MACjCC,EAAmBP,EAAnBO,SAAUC,EAASR,EAATQ,KAElB,OACI,kBAAC,IAAD,CAAQC,SAAUC,OAAOD,SAAUH,MAAOH,GACtC,kBAAC,IAAD,CACIG,MAAOL,EAAKU,YAAYL,MACxBM,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEtD,iCACA,gCACI,wBACIC,MAAO,CACHC,UAAWC,YAAO,GAClBC,aAAc,IAGrBhB,EAAKU,YAAYL,OAElB,uBACIQ,MAAK,iBACEI,aAAM,IADR,CAEDC,QAAS,QACTF,aAAcD,YAAO,MAGxBf,EAAKU,YAAYS,OAG1B,6BAASC,wBAAyB,CAAEC,OAAQrB,EAAKsB,QACjD,wBACIT,MAAO,CACHG,aAAcD,YAAO,MAG7B,gCACI,kBAAC,IAAD,QAIJ,6BACA,wBACIF,MAAO,CACPK,QAAS,OACTK,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGT,4BACCpB,GACG,kBAAC,OAAD,CAAMqB,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAApC,KACGxB,EAASI,YAAYL,QAI5B,4BACCE,GACG,kBAAC,OAAD,CAAMoB,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC/BvB,EAAKG,YAAYL,MADlB,WAab,IAAM0B,EAAY","file":"component---src-templates-blog-post-tsx-fca7f90d2cab184f7c0a.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\ninterface Props {\n    data: {\n        markdownRemark: any\n        site: {\n            siteMetadata: {\n                title: string;\n            };\n        };\n    };\n    pageContext: any;\n}\n\nconst BlogPostTemplate: React.FunctionComponent<Props> = ({ data, pageContext }) => {\n\n    const post = data.markdownRemark\n    const siteTitle = data.site.siteMetadata.title\n    const { previous, next } = pageContext\n\n    return (\n        <Layout location={window.location} title={siteTitle}>\n            <SEO\n                title={post.frontmatter.title}\n                description={post.frontmatter.description || post.excerpt}\n            />\n            <article>\n            <header>\n                <h1\n                    style={{\n                        marginTop: rhythm(1),\n                        marginBottom: 0,\n                    }}\n                >\n                {post.frontmatter.title}\n                </h1>\n                <p\n                    style={{\n                        ...scale(-1 / 5),\n                        display: `block`,\n                        marginBottom: rhythm(1),\n                    }}\n                >\n                    {post.frontmatter.date}\n                </p>\n            </header>\n            <section dangerouslySetInnerHTML={{ __html: post.html }} />\n            <hr\n                style={{\n                    marginBottom: rhythm(1),\n                }}\n            />\n            <footer>\n                <Bio />\n            </footer>\n            </article>\n\n            <nav>\n            <ul\n                style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n                }}\n            >\n                <li>\n                {previous && (\n                    <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                    </Link>\n                )}\n                </li>\n                <li>\n                {next && (\n                    <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                    </Link>\n                )}\n                </li>\n            </ul>\n            </nav>\n        </Layout>\n    )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}